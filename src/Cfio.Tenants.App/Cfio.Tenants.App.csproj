<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <SpaRoot Condition="$(SpaRoot)==''">..\ClientApp\</SpaRoot>
    <SpaProxyServerUrl Condition="$(SpaProxyServerUrl)==''">https://localhost:44491</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>cfio_tenants_app</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <EnableSdkContainerSupport>true</EnableSdkContainerSupport>
    <DockerfileContext>..\..</DockerfileContext>
    <DockerComposeProjectPath>..\..\docker-compose.dcproj</DockerComposeProjectPath>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="obj\**" />
    <Content Remove="obj\**" />
    <EmbeddedResource Remove="obj\**" />
    <None Remove="obj\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.8" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.*" />
    <PackageReference Include="Finbuckle.MultiTenant.AspNetCore" Version="6.*" />
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="*" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning.ApiExplorer" Version="5.1.0" />
  </ItemGroup>
  <ItemGroup Label="gRPC">
    <PackageReference Include="Grpc.AspNetCore" Version="$(GrpcVersion)" />
  </ItemGroup>
  <ItemGroup Label="Juice">
    <PackageReference Include="Juice.AspNetCore" Version="$(JuiceRefVersion)" />
    <PackageReference Include="Juice.EventBus.IntegrationEventLog.EF.PostgreSQL" Version="$(JuiceRefVersion)" />
    <PackageReference Include="Juice.EventBus.IntegrationEventLog.EF.SqlServer" Version="$(JuiceRefVersion)" />
    <PackageReference Include="Juice.EventBus.RabbitMQ" Version="$(JuiceRefVersion)" />
    <PackageReference Include="Juice.MediatR.RequestManager.EF.PostgreSQL" Version="$(JuiceRefVersion)" />
    <PackageReference Include="Juice.MediatR.RequestManager.EF.SqlServer" Version="$(JuiceRefVersion)" />
    <PackageReference Include="Juice.MultiTenant.Api" Version="$(JuiceRefVersion)" />
    <PackageReference Include="Juice.MultiTenant.AspNetCore.SwaggerGen" Version="$(JuiceRefVersion)" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.17.2" />
  </ItemGroup>


  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') And $(RunInDocker)==''">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
  
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish" Condition="$(RunInDocker)==''">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\app\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
